---
import LogoComponent from "../logoComponent.astro"
import ShapeOne from "./shape-1.astro";
import type {NavItemType} from '@/util/interface.tsx'; 
import NavItem from './NavItem.astro'
import {menuMap} from '@/customization/navigation-map.js'; 
---
<!-- header-lower -->
<div 
id="header-lower"
class="header-lower font-[Monserrat] box_shadow"
>
    <div class="auto-container">
        <div class="justify-between flex flex-nowrap">
            <div class="logo-box p-5 sm:py-[37.5px] my-auto">
                <ShapeOne />
                <figure class="logo">
                    <a href="index.html"><LogoComponent /></a>
                </figure>
            </div>
            <div class="menu-area clearfix my-auto">
                <div
                    id="mobile-nav-toggler"
                    class="mobile-nav-toggler"
                >
                    <i class="icon-bar"></i>
                    <i class="icon-bar"></i>
                    <i class="icon-bar"></i>
                </div>
                <nav class="main-menu navbar-expand-md navbar-light">
                    <div class="" id="navbarSupportedContent">
                        <ul class="navigation clearfix flex">
                        {menuMap && menuMap.length > 0 &&
                            menuMap.map((item: NavItemType) =><NavItem {...item}/>)
                        }
                        </ul>
                    </div>
                </nav>
            </div>
            <div class="hidden sm:flex relative items-center justify-center py-[30px]">
                <div class="btn-box"><a href="index.html" class="theme-btn btn-one">Get A Quote</a></div>
            </div>
        </div>
    </div>
</div>
<script is:inline>
    console.log("inline script is working")
    const MobileToggler = document.getElementById("mobile-nav-toggler")
    const MobileMenu = document.getElementById("mobile-menu")
    const Backdrop = document.getElementById("backdrop"); 
    const OpenMenu = () =>{
        if(MobileMenu?.classList.contains("mobile-menu-close")){
            MobileMenu?.classList.remove("mobile-menu-close")
            Backdrop?.classList.add("backdrop-visible")
        }
        else{
            MobileMenu?.classList.add("mobile-menu-close")
            Backdrop?.classList.remove("backdrop-visible")
        }
    }
    MobileToggler?.addEventListener('mousedown', OpenMenu)
    const CheckIfClickedOutside = (event) =>{
        if(!MobileMenu?.classList.contains("mobile-menu-close") 
            && !MobileToggler?.contains(event.target)
            && !MobileMenu?.contains(event.target)
        ){
            MobileMenu?.classList.add("mobile-menu-close")
            Backdrop?.classList.remove("backdrop-visible")
        }
    }
    window.addEventListener("mousedown", CheckIfClickedOutside)
</script>